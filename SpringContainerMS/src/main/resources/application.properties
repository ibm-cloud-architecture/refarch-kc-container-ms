# management.endpoints.web.base-path=/
management.endpoints.web.exposure.include=*
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.platform=postgres
spring.datasource.url=${POSTGRESQL_URL:jdbc:postgresql://postgresql1:5432/postgres}
spring.datasource.username=${POSTGRESQL_USER:postgres}
spring.datasource.password=${POSTGRESQL_PWD:supersecret}


# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# kafka - event streams ids
# -------------------------
kafka.containers.consumer.groupid=ContainerSpringConsumers
kafka.container.anomaly.retry.consumer.groupid=ContainerAnomalyRetrySpringConsumers
kafka.orders.consumer.groupid=OrderSpringConsumers
kafka.orders.producer.clientid=OrderSpringProducer
kafka.containers.producer.clientid=ContainerSpringProducer
kafka.container.anomaly.retry.producer.clientid=ContainerAnomalyRetrySpringProducer
kafka.container.anomaly.dead.producer.clientid=ContainerAnomalyDeadSpringProducer

# Kafka - topic names
# -------------------
# Containers topic
kcsolution.containers.topic=containers
# Container Anomaly Retry topic
kcsolution.container.anomaly.retry.topic=container-anomaly-retry
# Containers Anomaly Dead topic
kcsolution.container.anomaly.dead.topic=container-anomaly-dead
# Order topic
kcsolution.orders.topic=orders


# BPM - Credetntials, endpoint and config
# ---------------------------------------
#BPM service login url
kcsolution.bpm_anomaly_service_login=${BPM_ANOMALY_LOGIN:https://postman-echo.com/status/404}
#BPM service url
kcsolution.bpm_anomaly_service=${BPM_ANOMALY:https://postman-echo.com/status/404}
#BPM service user
kcsolution.bpm_anomaly_service_user=${BPM_ANOMALY_USER:user}
#BPM service password
kcsolution.bpm_anomaly_service_password=${BPM_ANOMALY_PASSWORD:password}
# Container Anomaly threshold to call BPM service
kcsolution.container_anomaly_threshold=${ANOMALY_THRESHOLD:3}
# BPM authentication token time expiration
kcsolution.bpm_anomaly_service_expiration=${BPM_EXPIRATION:60}

# LOGGING LEVEL
logging.level.root=${LOGGING_CONTAINER_MS_ROOT:INFO}
logging.level.org.apache.kafka.clients.consumer.ConsumerConfig=${LOGGING_CONTAINER_MS_CONSUMER_CONFIG:ERROR}
logging.level.org.apache.kafka.clients.producer.ProducerConfig=${LOGGING_CONTAINER_MS_PRODUCER_CONFIG:ERROR}