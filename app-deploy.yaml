apiVersion: appsody.dev/v1beta1
kind: AppsodyApplication
metadata:
  annotations:
    commit.image.appsody.dev/author: Rick O <rosowski@gmail.com>
    commit.image.appsody.dev/committer: GitHub <noreply@github.com>
    commit.image.appsody.dev/contextDir: C:\dev\refarch\refarch-kc-container-ms
    commit.image.appsody.dev/date: Fri Jul 10 13:15:40 2020 -0700
    commit.image.appsody.dev/message: 'Merge pull request #54 from jesusmah/compose_refactor'
    commit.stack.appsody.dev/author: Harish Yayi <yharish991@gmail.com>
    commit.stack.appsody.dev/committer: GitHub <noreply@github.com>
    commit.stack.appsody.dev/contextDir: /incubator/java-spring-boot2
    commit.stack.appsody.dev/date: Thu Jun 4 12:03:56 2020 +0100
    commit.stack.appsody.dev/message: 'java-springboot2: define APPSODY_DEBUG_PORT
      (#819)'
    image.opencontainers.org/created: "2020-07-28T14:19:01+01:00"
    image.opencontainers.org/documentation: https://github.com/ibm-cloud-architecture/refarch-kc-container-ms
    image.opencontainers.org/revision: de73a4946cceaf3d5b7f8358758ef3f86e5f2220
    image.opencontainers.org/source: https://github.com/ibm-cloud-architecture/refarch-kc-container-ms/tree/HEAD
      -> upstream
    image.opencontainers.org/url: https://github.com/ibm-cloud-architecture/refarch-kc-container-ms
    stack.appsody.dev/authors: Erin Schnabel <ebullient>, Ozzy Osborne <bardweller>,
      Richard Trotter <richard-trotter>, Harish Yayi <yharish991>
    stack.appsody.dev/configured: docker.io/appsody/java-spring-boot2:0.3
    stack.appsody.dev/created: "2020-06-04T11:06:14Z"
    stack.appsody.dev/description: Spring Boot using OpenJ9 and Maven
    stack.appsody.dev/digest: sha256:b1dc6398a112888f2b4a5e46a517f5f39b13d0712132e2ec53d9382c15be8aaa
    stack.appsody.dev/documentation: https://github.com/appsody/stacks/tree/master/incubator/java-spring-boot2/README.md
    stack.appsody.dev/licenses: Apache-2.0
    stack.appsody.dev/revision: 7417563d37f987bc803711298b29817519cc648d
    stack.appsody.dev/source: https://github.com/appsody/stacks/tree/master/incubator/java-spring-boot2/image
    stack.appsody.dev/tag: docker.io/appsody/java-spring-boot2:0.3.30
    stack.appsody.dev/title: Spring BootÂ®
    stack.appsody.dev/url: https://github.com/appsody/stacks/tree/master/incubator/java-spring-boot2
  creationTimestamp: null
  labels:
    app.appsody.dev/name: refarch-kc
    app.kubernetes.io/part-of: refarch-kc
    image.opencontainers.org/title: spring-container-ms
    stack.appsody.dev/id: java-spring-boot2
    stack.appsody.dev/version: 0.3.30
  name: spring-container-ms
spec:
  applicationImage: ibmcase/kcontainer-spring-container-ms:latest
  createKnativeService: false
  env:
  - name: KAFKA_BROKERS
    valueFrom:
      configMapKeyRef:
        key: brokers
        name: kafka-brokers
  - name: KCSOLUTION_CONTAINERS_TOPIC
    valueFrom:
      configMapKeyRef:
        key: containersTopic
        name: kafka-topics
  - name: KCSOLUTION_ORDERS_TOPIC
    valueFrom:
      configMapKeyRef:
        key: ordersTopic
        name: kafka-topics
  - name: KCSOLUTION_CONTAINER_ANOMALY_RETRY_TOPIC
    valueFrom:
      configMapKeyRef:
        key: containerAnomalyRetryTopic
        name: kafka-topics
  - name: KCSOLUTION_CONTAINER_ANOMALY_DEAD_TOPIC
    valueFrom:
      configMapKeyRef:
        key: containerAnomalyDeadTopic
        name: kafka-topics
  - name: POSTGRESQL_URL
    valueFrom:
      secretKeyRef:
        key: url
        name: postgresql-creds
  - name: POSTGRESQL_USER
    valueFrom:
      secretKeyRef:
        key: username
        name: postgresql-creds
  - name: POSTGRESQL_PWD
    valueFrom:
      secretKeyRef:
        key: password
        name: postgresql-creds
  - name: ANOMALY_THRESHOLD
    valueFrom:
      configMapKeyRef:
        key: anomalyThreshold
        name: bpm-anomaly
        optional: true
  - name: BPM_ANOMALY
    valueFrom:
      configMapKeyRef:
        key: url
        name: bpm-anomaly
        optional: true
  - name: BPM_ANOMALY_LOGIN
    valueFrom:
      configMapKeyRef:
        key: login
        name: bpm-anomaly
        optional: true
  - name: BPM_EXPIRATION
    valueFrom:
      configMapKeyRef:
        key: expiration
        name: bpm-anomaly
        optional: true
  - name: BPM_ANOMALY_USER
    valueFrom:
      secretKeyRef:
        key: user
        name: bpm-anomaly
        optional: true
  - name: BPM_ANOMALY_PASSWORD
    valueFrom:
      secretKeyRef:
        key: password
        name: bpm-anomaly
        optional: true
  expose: true
  livenessProbe:
    failureThreshold: 20
    httpGet:
      path: /actuator/liveness
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 5
  monitoring:
    endpoints:
    - path: /actuator/prometheus
    labels:
      k8s-app: spring-container-ms
  readinessProbe:
    failureThreshold: 20
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 1
  service:
    annotations:
      prometheus.io/path: /actuator/prometheus
      prometheus.io/scrape: "true"
    port: 8080
    type: NodePort
  stack: java-spring-boot2
  version: 1.0.0
status: {}
